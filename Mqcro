local farming = false
local position = Vector3.new(0, 5, 1) -- Target position
local radius = 100 -- Movement radius
local walkSpeed = 16 

local player = game.Players.LocalPlayer
local humanoid = player.Character and player.Character:FindFirstChild("Humanoid") or nil
local backpack = player:FindFirstChild("Backpack")

-- Function to Equip the Sword
local function equipSword()
    repeat task.wait() until backpack
    local sword = backpack:FindFirstChild("Hellfire")
    if sword then
        humanoid:EquipTool(sword)
    end
end

-- Function to Trigger the Sword's Abilities
local function triggerAbilities()
    while farming do
        local sword = player.Character and player.Character:FindFirstChild("Hellfire")
        if sword then
            local overAbility = sword:FindFirstChild("over")
            local wrathAbility = sword:FindFirstChild("wrath")
            if overAbility and wrathAbility then
                overAbility:Activate()
                wrathAbility:Activate()
            end
        end
        task.wait(2) -- Activates abilities every 2 seconds
    end
end

-- Walking in a Circular Path
local function walkInCircle()
    while farming do
        local angle = tick() * 2 * math.pi / 3
        local newPosition = position + Vector3.new(math.sin(angle) * radius, 0, math.cos(angle) * radius)
        humanoid:MoveTo(newPosition)
        task.wait(0.1)
    end
end

-- Ensure UI & Script Continues After Death
local function onRespawn()
    player.CharacterAdded:Connect(function(character)
        humanoid = character:WaitForChild("Humanoid")
        backpack = player:FindFirstChild("Backpack")
        task.wait(1) -- Small delay for backpack to load

        equipSword()
        farming = true
        task.spawn(triggerAbilities)
        task.spawn(walkInCircle)
    end)
end
onRespawn()

-- UI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game:GetService("CoreGui") -- UI now stays after death

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 150)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
frame.Parent = screenGui
frame.Active = true
frame.Draggable = true -- UI can now be moved

local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 200, 0, 50)
button.Position = UDim2.new(0, 10, 0, 10)
button.Text = "Enable Auto Farm"
button.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
button.Parent = frame

local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(0, 200, 0, 50)
statusLabel.Position = UDim2.new(0, 10, 0, 70)
statusLabel.Text = "Status: Idle"
statusLabel.Parent = frame

local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 50, 0, 50)
closeButton.Position = UDim2.new(0, 160, 0, 10)
closeButton.Text = "X"
closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
closeButton.Parent = frame

-- Toggle Auto Farm
button.MouseButton1Click:Connect(function()
    farming = not farming
    
    if farming then
        button.Text = "Disable Auto Farm"
        statusLabel.Text = "Status: Farming"
        task.spawn(equipSword)
        task.spawn(triggerAbilities)
        task.spawn(walkInCircle)
    else
        button.Text = "Enable Auto Farm"
        statusLabel.Text = "Status: Idle"
    end
end)

-- Close the UI when X is clicked
closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)
